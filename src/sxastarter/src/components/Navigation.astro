---
import { TextField, SitecoreContextMap } from "@astro-sitecore-jss/astro-sitecore-jss";
import NavigationList from "components/NestedComponents/NavigationList.astro";

export interface Fields {
  Id: string;
  DisplayName: string;
  Title: TextField;
  NavigationTitle: TextField;
  Href: string;
  Querystring: string;
  Children: Array<Fields>;
  Styles: string[];
}

export type NavigationProps = {
  params?: { [key: string]: string };
  fields: Fields;
  relativeLevel: number;
};

const props: NavigationProps = Astro.props.route;
const styles =
  props.params != null
    ? `${props.params.GridParameters ?? ""} ${props.params.Styles ?? ""}`.trimEnd()
    : "";
const id = props.params?.RenderingIdentifier;

const isEmpty = !Object.values(props.fields).length;

const sitecoreContext = SitecoreContextMap.get()["scContext"];
const isPageEditing = sitecoreContext.pageEditing;
---

<>{
    isEmpty && (
      <div class={`component navigation ${styles}`} id={id ? id : undefined}>
        <div class="component-content">[Navigation]</div>
      </div>
    )
  }
  {
  !isEmpty && <div class={`component navigation ${styles}`} id={id ? id : undefined}>
      <label class="menu-mobile-navigate-wrapper">
        <input
          type="checkbox"
          class="menu-mobile-navigate"
          data-isPageEditing={isPageEditing}
        />
        {/* DEMO TEAM CUSTOMIZATION */}
        <div class="menu-humburger">
          <span></span>
          <span></span>
          <span></span>
        </div>
        <div class="component-content">
          <nav>
            {/* DEMO TEAM CUSTOMIZATION */}
            <ul>{
              Object.values(props.fields)
                .filter((element) => element)
                .map((element: Fields, key: number) => (
                  <NavigationList
                    key={`${key}${element.Id}`}
                    fields={element}
                    relativeLevel={1}
                  />
                ))
              }</ul>
          </nav>
        </div>
      </label>
    </div>
  }
</>

<script>
  import { handleToggleMenu } from 'components/scripts/Menu';

  const menuMobileNavigate = document.getElementsByClassName("menu-mobile-navigate")[0];
  menuMobileNavigate?.addEventListener("change", (event) => {
    handleToggleMenu(event);
  });
</script>