---
import { SitecoreContextMap } from "@astro-sitecore-jss/astro-sitecore-jss";
const sitecoreContext = SitecoreContextMap.get()["scContext"];
const availableLanguages = [
  { code: "en", label: "English" },
  { code: "fr-CA", label: "Français" },
  { code: "ja-JP", label: "日本語" },
];

const pathName = Astro.url.pathname.toLowerCase();

const pageWithoutLangCode = (url: string) => {
  for (let i = 0; i < availableLanguages.length; i++) {
    if(pathName.startsWith('/' + availableLanguages[i].code.toLowerCase())){
      return pathName.substring(availableLanguages[i].code.length + 1);
    }
  }
  return url;
}

const getLangPageUrl = (lang: string) => {
  const pathWithoutLanguage = pageWithoutLangCode(pathName);
  if(pathWithoutLanguage){
    return "/" + lang + pathWithoutLanguage;
  }
  return null;
}
---

<div class={`language-switcher`}>
  <span class="selected-language">{ availableLanguages.find((lang) => lang.code === sitecoreContext.language)?.label }</span><svg
    xmlns="http://www.w3.org/2000/svg"
    class="chevron-icon"
    viewBox="0 0 512 512"
    width={16}
    fill="currentColor"
  >
    <path
      d="M233.4 406.6c12.5 12.5 32.8 12.5 45.3 0l192-192c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0L256 338.7 86.6 169.4c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3l192 192z"
    ></path></svg>
  <div class="language-dropdown">
    {
      availableLanguages.map((lang) => {
        return (<span key={lang.code} href={getLangPageUrl(lang.code)}>
            {lang.label}
          </span>)
      })
    }
  </div>
</div>
<script>
  const languageSwitcherRoot: Element | null =
    document.querySelector(".language-switcher");
  const languageDropdown: Element | null =
    languageSwitcherRoot?.querySelector(".language-dropdown") ?? null;
  const languages = languageDropdown?.querySelectorAll("span");
  const setShowLanguageDropdown = () => {
    if (languageSwitcherRoot) {
      languageSwitcherRoot.classList.toggle("expanded");
    }
    if (languageDropdown) {
      languageDropdown.classList.toggle("expanded");
    }
  };
  languageSwitcherRoot?.addEventListener("click", setShowLanguageDropdown);
  languages?.forEach((lang) => {
    lang.addEventListener("click", (e) => {
      let url = e.currentTarget.getAttribute("href");
      window.location.replace(url);
    });
  });
</script>
